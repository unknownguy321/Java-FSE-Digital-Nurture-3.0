import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

class Book {
    private int bookId;
    private String title;
    private String author;

    public Book(int bookId, String title, String author) {
        this.bookId = bookId;
        this.title = title;
        this.author = author;
    }

    public int getBookId() {
        return bookId;
    }

    public String getTitle() {
        return title;
    }

    public String getAuthor() {
        return author;
    }

    @Override
    public String toString() {
        return "Book ID: " + bookId + ", Title: " + title + ", Author: " + author;
    }
}

public class BookSearch {

    public static List<Book> linearSearch(List<Book> books, String title) {
        List<Book> results = new ArrayList<>();
        for (Book book : books) {
            if (book.getTitle().equalsIgnoreCase(title)) {
                results.add(book);
            }
        }
        return results;
    }

    public static List<Book> binarySearch(List<Book> books, String title) {
        int left = 0, right = books.size() - 1;
        List<Book> results = new ArrayList<>();
        while (left <= right) {
            int mid = (left + right) / 2;
            if (books.get(mid).getTitle().equalsIgnoreCase(title)) {
                results.add(books.get(mid));
                // Check for duplicates on both sides
                int i = mid - 1;
                while (i >= 0 && books.get(i).getTitle().equalsIgnoreCase(title)) {
                    results.add(books.get(i));
                    i--;
                }
                i = mid + 1;
                while (i < books.size() && books.get(i).getTitle().equalsIgnoreCase(title)) {
                    results.add(books.get(i));
                    i++;
                }
                break;
            } else if (books.get(mid).getTitle().compareToIgnoreCase(title) < 0) {
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }
        return results;
    }

    public static void main(String[] args) {
        // Create a list of books
        List<Book> books = new ArrayList<>();
        books.add(new Book(1, "The Great Gatsby", "F. Scott Fitzgerald"));
        books.add(new Book(2, "To Kill a Mockingbird", "Harper Lee"));
        books.add(new Book(3, "1984", "George Orwell"));
        books.add(new Book(4, "The Catcher in the Rye", "J.D. Salinger"));
        books.add(new Book(5, "The Great Gatsby", "F. Scott Fitzgerald"));

        // Perform a linear search
        System.out.println("Linear Search Results:");
        List<Book> linearResults = linearSearch(books, "The Great Gatsby");
        for (Book book : linearResults) {
            System.out.println(book);
        }

        // Sort the list by title for binary search
        Collections.sort(books, Comparator.comparing(Book::getTitle));

        // Perform a binary search
        System.out.println("\nBinary Search Results:");
        List<Book> binaryResults = binarySearch(books, "The Great Gatsby");
        for (Book book : binaryResults) {
            System.out.println(book);
        }
    }
}
