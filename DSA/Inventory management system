import java.util.HashMap;
import java.util.Map;

class Product {
    private int productId;
    private String productName;
    private int quantity;
    private double price;

    public Product(int productId, String productName, int quantity, double price) {
        this.productId = productId;
        this.productName = productName;
        this.quantity = quantity;
        this.price = price;
    }

    // Getters and Setters
    public int getProductId() {
        return productId;
    }

    public void setProductId(int productId) {
        this.productId = productId;
    }

    public String getProductName() {
        return productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }

    public int getQuantity() {
        return quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    @Override
    public String toString() {
        return "Product{" +
                "productId=" + productId +
                ", productName='" + productName + '\'' +
                ", quantity=" + quantity +
                ", price=" + price +
                '}';
    }
}

public class InventoryManagementSystem {
    private Map<Integer, Product> inventory;

    public InventoryManagementSystem() {
        inventory = new HashMap<>();
    }

    // Method to add a product
    public void addProduct(Product product) {
        inventory.put(product.getProductId(), product);
    }

    // Method to update a product
    public void updateProduct(Product product) {
        inventory.put(product.getProductId(), product);
    }

    // Method to delete a product
    public void deleteProduct(int productId) {
        inventory.remove(productId);
    }

    // Method to get a product
    public Product getProduct(int productId) {
        return inventory.get(productId);
    }

    // Method to display all products
    public void displayAllProducts() {
        for (Product product : inventory.values()) {
            System.out.println(product);
        }
    }

    public static void main(String[] args) {
        InventoryManagementSystem ims = new InventoryManagementSystem();

        Product product1 = new Product(1, "Laptop", 10, 800.00);
        Product product2 = new Product(2, "Smartphone", 20, 500.00);

        ims.addProduct(product1);
        ims.addProduct(product2);

        System.out.println("Displaying all products:");
        ims.displayAllProducts();

        System.out.println("\nUpdating product quantity:");
        product1.setQuantity(15);
        ims.updateProduct(product1);

        ims.displayAllProducts();

        System.out.println("\nGetting product with ID 1:");
        System.out.println(ims.getProduct(1));

        System.out.println("\nDeleting product with ID 2:");
        ims.deleteProduct(2);

        ims.displayAllProducts();
    }
}
